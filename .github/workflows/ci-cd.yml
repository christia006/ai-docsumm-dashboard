name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build and Test Frontend
      run: |
        cd frontend
        npm install
        npm run build # Atau npm test jika Anda punya unit tests
        # Add frontend tests here
        # npm test

    - name: Install Backend Dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Run Backend Tests (Optional)
      # Ini membutuhkan PostgreSQL berjalan, bisa pakai services di job atau mock DB
      # Untuk kesederhanaan, ini adalah placeholder.
      run: |
        echo "Running backend tests (placeholder)..."
        # cd backend
        # python -m pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' # Hanya deploy saat push ke main

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub (or other registry)
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: your_docker_username/ai-doc-summarizer-backend:latest

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: your_docker_username/ai-doc-summarizer-frontend:latest

    - name: Deploy to Server (SSH/KubeCTL/Heroku/Vercel)
      # Ini adalah langkah placeholder. Implementasi aktual akan sangat bervariasi.
      # Contoh untuk SSH:
      # uses: appleboy/ssh-action@master
      # with:
      #   host: ${{ secrets.SSH_HOST }}
      #   username: ${{ secrets.SSH_USERNAME }}
      #   key: ${{ secrets.SSH_PRIVATE_KEY }}
      #   script: |
      #     cd /path/to/your/app
      #     docker-compose pull
      #     docker-compose up -d --remove-orphans

      run: echo "Deployment step goes here. e.g., deploy to a cloud provider."